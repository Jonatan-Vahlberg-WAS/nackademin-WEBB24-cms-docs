import { cn } from "@/utils/cn";
import { getIconForExtension } from "@/utils/helpers";
import IconTooltip from "../../Ui/TWIconTooltip";

const FileIcon = ({
  extension,
  isUploaded = false,
  variant = "default",
  isAutoGenerated = false,
  isGhost = false,
  error = false,
  isHovered = false,
  iconSize = "md",
  asLink = false,
  setIsHovered = () => {},
  onClick,
}) => {
  const icon = getIconForExtension(extension);

  const iconClasses = cn(
    "relative text-3xl",
    {
      "cursor-pointer hover:!filter hover:!brightness-75":
        !error && (isUploaded || isAutoGenerated || isGhost),
      "cursor-not-allowed": error,
      "text-blue-500": isAutoGenerated && !error,
      "text-red-500": error,
      "text-gray-500": !isUploaded && !isAutoGenerated && !error,
      "text-green-600": isUploaded && !isAutoGenerated && !error,
      "text-green-800 relative": isUploaded && isGhost && !error,
      "filter brightness-75":
        isHovered && !error && (isUploaded || isAutoGenerated || isGhost),
      "text-md mr-0": iconSize === "xs",
      "text-2xl mr-0": iconSize === "sm",
      "text-3xl": iconSize === "md",
      "text-4xl": iconSize === "lg",
      "text-blue-400 hover:!text-blue-600": asLink && !error && isUploaded,
    },
    `fas fa-${icon}`
  );

  return (
    <i
      className={iconClasses}
      onClick={onClick}
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
    >
      {isGhost && (
        <IconTooltip
          icon="fa fa-info-circle"
          variant="warning"
          message="This file is uploaded somewhere else and cannot be deleted here."
          classname="absolute text-xs -top-0 -right-[3px] -mt-1 -mr-1"
        />
      )}
    </i>
  );
};

export default FileIcon;
