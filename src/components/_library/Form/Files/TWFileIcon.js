import { cn } from '@/utils/cn'
import { getIconForExtension } from '@/utils/helpers'
import IconTooltip from '../../Ui/TWIconTooltip'

const FileIcon = ({
  extension,
  isUploaded = false,
  variant = 'default',
  isAutoGenerated = false,
  isGhost = false,
  error = false,
  isHovered = false,
  iconSize = 'md',
  asLink = false,
  setIsHovered = () => {},
  onClick,
}) => {
  const icon = getIconForExtension(extension)

  const iconClasses = cn(
    'tw:!relative tw:!text-3xl',
    {
      'tw:!cursor-pointer tw:hover:!filter tw:hover:!brightness-75': !error && (isUploaded || isAutoGenerated || isGhost),
      'tw:!cursor-not-allowed': error,
      'tw:!text-blue-500': isAutoGenerated && !error,
      'tw:!text-red-500': error,
      'tw:!text-gray-500': !isUploaded && !isAutoGenerated && !error,
      'tw:!text-green-600': isUploaded && !isAutoGenerated && !error,
      'tw:!text-green-800 tw:!relative': isUploaded && isGhost && !error,
      'tw:!filter tw:!brightness-75': isHovered && !error && (isUploaded || isAutoGenerated || isGhost),
      'tw:!text-md tw:!mr-0': iconSize === 'xs',
      'tw:!text-2xl tw:!mr-0': iconSize === 'sm',
      'tw:!text-3xl': iconSize === 'md',
      'tw:!text-4xl': iconSize === 'lg',
      'tw:!text-blue-400 tw:hover:!text-blue-600': asLink && !error && isUploaded
    },
    `fas fa-${icon}`
  )

  return (
    <i 
      className={iconClasses} 
      onClick={onClick} 
      onMouseEnter={() => setIsHovered(true)} 
      onMouseLeave={() => setIsHovered(false)}>
      {isGhost && (
        <IconTooltip
          icon='fa fa-info-circle'
          variant='warning'
          message='This file is uploaded somewhere else and cannot be deleted here.'
          classname='tw:!absolute tw:!text-xs tw:!-top-0 tw:!-right-[3px] tw:!-mt-1 tw:!-mr-1'
        />
      )}
    </i>
  )
}

export default FileIcon
